use dysql::{Content, fetch_all};
use sqlx::FromRow;

#[tokio::main]
async fn main() {
    let dto = UserDto{ id: None, name: None, age: Some(13) , id_rng: None };
    let _rst = fetch_all!(|dto| -> User {
        r#"SELECT * FROM test_user 
        WHERE 1 = 1
          {{#name}}AND name = :name{{/name}}
          {{#age}}AND age > :age{{/age}}
        ORDER BY id"#
    });

    // let rst = 'rst_block: {
    //     let sql_tpl = match dysql::get_sql_template(3245002281272997655u64) {
    //         Some(tpl) => tpl,
    //         None => {
    //             let serd_template = [
    //                 5u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 36u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 83u8,
    //                 69u8,
    //                 76u8,
    //                 69u8,
    //                 67u8,
    //                 84u8,
    //                 32u8,
    //                 42u8,
    //                 32u8,
    //                 70u8,
    //                 82u8,
    //                 79u8,
    //                 77u8,
    //                 32u8,
    //                 116u8,
    //                 101u8,
    //                 115u8,
    //                 116u8,
    //                 95u8,
    //                 117u8,
    //                 115u8,
    //                 101u8,
    //                 114u8,
    //                 32u8,
    //                 87u8,
    //                 72u8,
    //                 69u8,
    //                 82u8,
    //                 69u8,
    //                 32u8,
    //                 49u8,
    //                 32u8,
    //                 61u8,
    //                 32u8,
    //                 49u8,
    //                 32u8,
    //                 4u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 110u8,
    //                 97u8,
    //                 109u8,
    //                 101u8,
    //                 155u8,
    //                 174u8,
    //                 103u8,
    //                 242u8,
    //                 255u8,
    //                 172u8,
    //                 182u8,
    //                 175u8,
    //                 2u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 1u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 16u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 65u8,
    //                 78u8,
    //                 68u8,
    //                 32u8,
    //                 110u8,
    //                 97u8,
    //                 109u8,
    //                 101u8,
    //                 32u8,
    //                 61u8,
    //                 32u8,
    //                 58u8,
    //                 110u8,
    //                 97u8,
    //                 109u8,
    //                 101u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 4u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 1u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 32u8,
    //                 3u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 97u8,
    //                 103u8,
    //                 101u8,
    //                 249u8,
    //                 39u8,
    //                 20u8,
    //                 224u8,
    //                 131u8,
    //                 169u8,
    //                 2u8,
    //                 227u8,
    //                 2u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 1u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 14u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 65u8,
    //                 78u8,
    //                 68u8,
    //                 32u8,
    //                 97u8,
    //                 103u8,
    //                 101u8,
    //                 32u8,
    //                 62u8,
    //                 32u8,
    //                 58u8,
    //                 97u8,
    //                 103u8,
    //                 101u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 4u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 12u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 32u8,
    //                 79u8,
    //                 82u8,
    //                 68u8,
    //                 69u8,
    //                 82u8,
    //                 32u8,
    //                 66u8,
    //                 89u8,
    //                 32u8,
    //                 105u8,
    //                 100u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 8u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 79u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 113u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 0u8,
    //                 83u8,
    //                 69u8,
    //                 76u8,
    //                 69u8,
    //                 67u8,
    //                 84u8,
    //                 32u8,
    //                 42u8,
    //                 32u8,
    //                 70u8,
    //                 82u8,
    //                 79u8,
    //                 77u8,
    //                 32u8,
    //                 116u8,
    //                 101u8,
    //                 115u8,
    //                 116u8,
    //                 95u8,
    //                 117u8,
    //                 115u8,
    //                 101u8,
    //                 114u8,
    //                 32u8,
    //                 87u8,
    //                 72u8,
    //                 69u8,
    //                 82u8,
    //                 69u8,
    //                 32u8,
    //                 49u8,
    //                 32u8,
    //                 61u8,
    //                 32u8,
    //                 49u8,
    //                 32u8,
    //                 123u8,
    //                 123u8,
    //                 35u8,
    //                 110u8,
    //                 97u8,
    //                 109u8,
    //                 101u8,
    //                 125u8,
    //                 125u8,
    //                 65u8,
    //                 78u8,
    //                 68u8,
    //                 32u8,
    //                 110u8,
    //                 97u8,
    //                 109u8,
    //                 101u8,
    //                 32u8,
    //                 61u8,
    //                 32u8,
    //                 58u8,
    //                 110u8,
    //                 97u8,
    //                 109u8,
    //                 101u8,
    //                 123u8,
    //                 123u8,
    //                 47u8,
    //                 110u8,
    //                 97u8,
    //                 109u8,
    //                 101u8,
    //                 125u8,
    //                 125u8,
    //                 32u8,
    //                 123u8,
    //                 123u8,
    //                 35u8,
    //                 97u8,
    //                 103u8,
    //                 101u8,
    //                 125u8,
    //                 125u8,
    //                 65u8,
    //                 78u8,
    //                 68u8,
    //                 32u8,
    //                 97u8,
    //                 103u8,
    //                 101u8,
    //                 32u8,
    //                 62u8,
    //                 32u8,
    //                 58u8,
    //                 97u8,
    //                 103u8,
    //                 101u8,
    //                 123u8,
    //                 123u8,
    //                 47u8,
    //                 97u8,
    //                 103u8,
    //                 101u8,
    //                 125u8,
    //                 125u8,
    //                 32u8,
    //                 79u8,
    //                 82u8,
    //                 68u8,
    //                 69u8,
    //                 82u8,
    //                 32u8,
    //                 66u8,
    //                 89u8,
    //                 32u8,
    //                 105u8,
    //                 100u8,
    //             ];
    //             dysql::put_sql_template(3245002281272997655u64, &serd_template)
    //                 .expect("Unexpected error when put_sql_template")
    //         }
    //     };
    //     let named_sql: String = sql_tpl.render(&dto);
    //     let named_sql = dysql::SqlNodeLinkList::new(&named_sql).trim().to_string();
    //     let query = dysql::Query::new(
    //         dysql::QueryCmd::FetchAll(named_sql),
    //         Some(dto),
    //     );
    //     query
    // };
}

#[derive(Content, Clone)]
struct UserDto {
    id: Option<i64>,
    name: Option<String>,
    age: Option<i32>,
    id_rng: Option<Vec<i32>>,
}

#[derive(Debug, PartialEq)]
#[derive(FromRow)]
struct User {
    id: i64,
    name: Option<String>,
    age: Option<i32>,
}